import pandas as pd

def meltTable(report: pd.DataFrame) -> pd.DataFrame:
    report =report.melt(
        id_vars=["product"],
        value_vars=["quarter_1","quarter_2","quarter_3", "quarter_4"],
        var_name="quarter",
        value_name="sales",
    )

    return report




"""
2890. Reshape Data: Melt
Easy
13
1
Companies
DataFrame report
+-------------+--------+
| Column Name | Type   |
+-------------+--------+
| product     | object |
| quarter_1   | int    |
| quarter_2   | int    |
| quarter_3   | int    |
| quarter_4   | int    |
+-------------+--------+
Write a solution to reshape the data so that each row represents sales data for a product in a specific quarter.

The result format is in the following example.

 

Example 1:

Input:
+-------------+-----------+-----------+-----------+-----------+
| product     | quarter_1 | quarter_2 | quarter_3 | quarter_4 |
+-------------+-----------+-----------+-----------+-----------+
| Umbrella    | 417       | 224       | 379       | 611       |
| SleepingBag | 800       | 936       | 93        | 875       |
+-------------+-----------+-----------+-----------+-----------+
Output:
+-------------+-----------+-------+
| product     | quarter   | sales |
+-------------+-----------+-------+
| Umbrella    | quarter_1 | 417   |
| SleepingBag | quarter_1 | 800   |
| Umbrella    | quarter_2 | 224   |
| SleepingBag | quarter_2 | 936   |
| Umbrella    | quarter_3 | 379   |
| SleepingBag | quarter_3 | 93    |
| Umbrella    | quarter_4 | 611   |
| SleepingBag | quarter_4 | 875   |
+-------------+-----------+-------+
Explanation:
The DataFrame is reshaped from wide to long format. Each row represents the sales of a product in a quarter.
Accepted
835
Submissions
966
Acceptance Rate
86.4%
Seen this question in a real interview before?
1/4
Yes
No



Solution
Overview
The problem involves reshaping a given DataFrame that captures sales data of products across different quarters. Initially, the data is structured in a wide format, where each product has separate columns for sales of every quarter. The task is to transform this data into a long format, where each row represents sales data for a specific product in a particular quarter, effectively consolidating the multiple quarter columns into two columns: one indicating the quarter and the other detailing the sales for that quarter.

Key Concepts:

melt Function: pandas' melt function is used to transform or reshape data. It changes the DataFrame from a wide format, where columns represent multiple variables, to a long format, where each row represents a unique variable. In our case, we want to transform the sales data from having separate columns for each quarter to a format where there's a single column for the quarter and a single column for the sales value.
melt Function Argument Definition:

id_vars: This specifies the columns that should remain unchanged. For this problem, only the product column remains unchanged because we want every row in the output to be associated with a product.

value_vars: This specifies the columns that we want to "melt" or reshape into rows. In our case, these are the sales data columns for each quarter: quarter_1, quarter_2, quarter_3, and quarter_4.

var_name: This is the name of the new column that will store the header names from the value_vars. In our problem, these are the quarter names.

value_name: This is the name of the new column that will store the values from the value_vars. In our problem, this will be the sales figures for each product for each quarter.

Intuition
Using the given example:

product	quarter_1	quarter_2	quarter_3	quarter_4
Umbrella	417	224	379	611
SleepingBag	800	936	93	875

The id_vars=['product'] keeps the product column intact.
The value_vars=['quarter_1', 'quarter_2', 'quarter_3', 'quarter_4'] means we're taking the data from these columns and reshaping it into two new columns.
var_name='quarter' will create a new column named quarter, and each entry in this column will be the column name from where the sales data was taken (e.g., quarter_1, quarter_2, etc.).
value_name='sales' will create a new column named sales, which will store the actual sales values.
By applying the melt function, the DataFrame is reshaped to the desired long format.

Using the Solution

Visualization of melt function

fig

When you pass this DataFrame to the function:

product	quarter_1	quarter_2	quarter_3	quarter_4
Umbrella	417	224	379	611
SleepingBag	800	936	93	875

It will return:

product	quarter	sales
Umbrella	quarter_1	417
SleepingBag	quarter_1	800
Umbrella	quarter_2	224
SleepingBag	quarter_2	936
Umbrella	quarter_3	379
SleepingBag	quarter_3	93
Umbrella	quarter_4	611
SleepingBag	quarter_4	875

Implementation

Comments (0)

Sort by:Best
Type comment here... (Markdown supported)
Preview
Comment
ðŸ’¡ Article Commenting Rules
1. This comment section is for questions and comments regarding this LeetCode article. All posts must respect our LeetCode Community Rules.

2. Concerns about errors or bugs in the article, problem description, or test cases should be posted on LeetCode Feedback, so that our team can address them.
"""
